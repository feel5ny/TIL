/********************************
 * 문제를 받으면, 잘게 잘게 쪼개자.
 * 주석을 써가면서 코딩한다.
********************************/


/********************************
 * 1번 )
 * for문을 사용하여 
 * 0부터 10미만의 정수 중에서 
 * 짝수만을 작은 수부터 출력하시오. 
********************************/
for(var i=0; i<10; i++){   /* 0부터 10미만의 정수이기 때문에 변수 i에 0을 할당한 후, 
                            * i는 10미만으로 범위를 잡았다. 작은 수부터 출력이므로 0부터 증가하도록 하였고, 
                            * i가 10이 될 때 for문은 끝난다.
                            * >> 첨삭 : 가독성이 높도록 하자.
                            */
  if (i%2==0){             // 짝수의 특징인 2의 배수를 활용하여 2로 나눴을 때 나머지가 0인 조건으로 값을 구분하였다.
    console.log(i);        // 출력 
  }
}









/********************************
 * 2번 )
 * for문을 사용하여 
 * 0부터 10미만의 정수 중에서 
 * 짝수만을 작은 수부터 문자열로 출력하시오.
********************************/
console.log('\n'); // 출력시 문제당 공백 추가하기 위해서 작성
/******************************/



var j = "";               /* 자가 문자열로 바뀌는 과정을 위해서 for문 밖에서 새로운 변수를 선언, 빈 문자열을 할당하였다.
                           * or문 밖에서 선언한 이유는 for문 내부에 선언할 경우 반복할 때마다 빈 문자열로 초기화되기 때문이다. 
                           */
for(var i=0; i<10; i++){  // 0부터 10미만, 작은 수부터 출력이므로, 시작값은 0, 범위는 10미만으로 잡았다.
  if (i%2==0){            // 짝수이므로 2로 나눴을때 나머지가 0인 값만 추출
    j = j + i;            /* 처음 i값에는 2의 배수가 할당이 되며, 빈 문자열인 j와 + 연산을 진행함으로써 
                           * 타입이 숫자였던 i의 값을 문자열로 변환하면서 j에 재할당시킨다. 
                           * 반복이 될때 재할당된 j값에 추가로 2의 배수가 할당된다. 
                           * (재할당된 j값이 초기화되는것을 방지하기 위해 j를 for문 밖에서 선언하였다.)
                           * i+j일 경우 기존 값이 새로운 값의 뒤에 붙기 때문에 // j += i
                           */ 
  }
}
console.log(j);            // 반복문이 종료되면 최종 문자열 출력.









/********************************
 * 3번 )
 * for문을 사용하여 
 * 0부터 10미만의 정수 중에서 
 * 홀수만을 큰수부터 출력하시오.
********************************/
console.log('\n'); // 출력시 문제당 공백 추가하기 위해서 작성
/******************************/



for(var i=10; i>0; i--){  // 큰 수부터 출력이기 때문에 첫시작을 가장 큰 값인 10으로 잡음. 
                          // 감소연산자로 큰수에서 작은수로 출력할 수 있도록 하였다.
  if(i%2==1){             // 홀수 이므로 2로 나눴을 때 나머지가 1인 값을 필터하였다. 
    console.log(i);       // 출력하면서 반복.
  }
}









/********************************
 * 4번 )
 * while문을 사용하여 
 * 0부터 10까지 정수 중에서 
 * 짝수만을 작은 수부터 출력하시오.
********************************/
console.log('\n'); // 출력시 문제당 공백 추가하기 위해서 작성
/******************************/



var a = 0;          // 작은 수부터 출력이므로 가장 낮은 범위인 0을 새로운 변수 a에 할당.
while (a < 10) {    // 10까지이므로 10이하로 범위를 잡음
  if (a%2==0){      // 짝수이므로 2로 나눴을 때 나머지가 0인 값을 필터
    console.log(a); // 줄마다 출력이므로 출력하면서 반복하도록 함.
  }
  a++;              // 작은 수부터 커지는 상황이므로 증감연산자를 사용. 
}









/********************************
 * 5번 )
 * while문을 사용하여 
 * 0부터 10미만의 정수 중에서 
 * 홀수만을 큰수부터 출력하시오.
********************************/
console.log('\n'); // 출력시 문제당 공백 추가하기 위해서 작성
/******************************/



var b = 10;         // 큰수부터 출력이므로 가장 큰 수를 새로운 변수에 할당하였다.
while(b>0){         // 0부터이므로 0이상
  if(b%2==1){       // 홀수이므로 2로 나눴을 때 나머지가 1인 값을 추출
    console.log(b); // 
  }
  b--;              // 큰 수 부터 출력을 위해서 큰수에서 감소하도록 함.
}









/**************************************************************************
 * 6번 ) 삼각형출력하기
 * 다음을 참고하여 *(별)로 높이가 5인(var line = 5) 삼각형을 문자열로 완성하라.
 * 개행문자('\n')를 사용하여 개행한다. 
 * 완성된 문자열의 마지막은 개행문자('\n')로 끝나도 관게없다.
**************************************************************************/
console.log('\n'); // 출력시 문제당 공백 추가하기 위해서 작성
/************************************************************************/



var z = '';                     /* 3. 문자열로 출력해야하며, 별이 반복되면서 문자열에 추가가 되어야하기 때문에, 
                                  for문 밖에서 새로운 변수에 문자열 타입을 선언하였다.
                                */
for (var i = 0; i < 5; i++){    // 1. i는 행의 개수로 생각하며 할당하였다. 1번째 줄부커 5번째 줄을 출력하도록 하기위해서 5미만으로 잡았다. 
  for(var j = 0; j <= i; j++){  /* 2. 한 행마다 별의 개수 출력하는 횟수를 위해서 새로운 반복문을 사용하였다. 
                                 * 출력해야할 모양을 보면 n번째 행에 n개의 별이 있다는 것을 알 수 있으므로, j는 i값까지 반복하게 설정하였다.
                                 * >> 첨삭 : 조금 더 가독성을 위해서 j < i +1로 설정한다.
                                 */
   z = z+'*';                   /* 4. 변수j가 할당된 for문이 시작하게 되면 빈문자열인 변수 z에 별이 추가된다. 
                                 * 별은 반복 횟수만큼 추가된다.
                                 */
  }
  z = z+'\n';                   // 5. 한줄이 끝나면 개행을 해야하므로, j가 할당된 for문이 종료된 직후 개행하도록 z에 재할당 하였다.
}
console.log(z);                 // 6. 모든 줄 반복(변수i의 for문)이 종료되면 최종 z값을 출력한다. 중간마다 \n이 있으므로 출력시 개행된다.


// < 정답 >
//
// // 삼각형 라인수
// var line = 5;
// // 출력용 변수
// var star = '';

// // 삼각형 라인수(line)만큼 루프: i = 0, 1, 2, 3, 4
// for (var i = 0; i < line; i++) {
//   // 라인별 별의 갯수(i + 1)만큼 루프
//   for (var j = 0; j < i + 1; j++) {
//     // 1번째 라인 : i = 0 / j = 0 => *
//     // 2번째 라인 : i = 1 / j = 0, 1 => **
//     // 3번째 라인 : i = 2 / j = 0, 1, 2 => ***
//     // 4번째 라인 : i = 3 / j = 0, 1, 2, 3 => ****
//     // 5번째 라인 : i = 4 / j = 0, 1, 2, 3, 4 => *****
//     star += '*';
//   }
//   // 개행
//   star += '\n';
// }

// console.log(star);









/****************************************************************
 * 7번 )
 * 트리 출력하기
 * 다음을 참고하여 *(별)로 트리를 문자열로 완성하라.
 * 개행문자('\n')를 사용하여 개행한다. 
 * 완성된 문자열의 마지막은 개행문자('\n')로 끝나도 관게없다.
****************************************************************/
console.log('\n'); // 출력시 문제당 공백 추가하기 위해서 작성
/**************************************************************/



var z = '';                             /* 3. 문자열로 출력해야하며, 별이 반복되면서 문자열에 추가가 되어야하기 때문에, 
                                         * for문 밖에서 새로운 변수에 문자열 타입을 선언하였다.
                                         */
for (var a = 0; a < 2; a++){            /* 1. 도출해야할 모양을 보면 3줄까지 출력한 후 5줄까지 출력하는 모양이므로, 
                                         * 전체를 2번 반복해야하므로 이전 문제의 코드에서 for문으로 한번 더 감쌌다.
                                         * 2번만 반복해도 되므로, 2까지 범위를 잡았다. 또한 3줄 > 5줄 같이 
                                         * 작은수부터 커지는 모양이므로 초기값을 0으로 잡았다.
                                         */
  for (var i = 0; i < a*2+3 ; i++){     /* 2. 이전 문제와 동일하되, 변수 a의 영향을 받기 위해서 
                                         * 3,5를 도출할 수 있는 수열식을 범위로 잡았다.
                                         * >> 첨삭 1 : 식을 쓰게되면 가독성이 현저히 떨어진다. 증감이나 범위는 알파벳만 쓰도록 하자.
                                         * >> 첨삭 2 : 가독성을 위해서 만약 i<11이라면 i<10+1이 좋다.
                                         * >> 항상 가독성을 생각하자. 
                                         */
    for(var j = 0; j <= i; j++){ 
    z = z+'*';
    }
    z = z+'\n';
  }
}
console.log(z);                           // 최종 반복문까지 종료된 후 도출하도록 한다. 
                                          // 문제를 풀 때, console.log(z)를 전체 for문(변수a가 할당된) 안에서 작성하였더니 
                                          // 3줄짜리가 계속 먼저 출력되서 고뇌에 빠졌었습니다..ㅎㅎ



// 쉽게 짜도록 노력해야한다 !!!!!
// 




